<!--Documentation: http://msdn.microsoft.com/en-us/library/ff660914%28v=pandp.20%29.aspx -->
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <assembly name="crds-angular" />
  <assembly name="Crossroads.Utilities" />
  <assembly name="Crossroads.Web.Common" />
  <assembly name="MinistryPlatform.Translation" />
  <assembly name="RestSharp" />
  <assembly name="System.Messaging" />
  <assembly name="System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <assembly name="System.Security.Cryptography" />
  <assembly name="GoogleMapsAPI.NET" />

  <!-- try this -->
  <alias alias="AddressProximity" type="" />
  
  <container>
    <!-- Register Angular REST Endpoint Dependencies -->
    <register type="crds_angular.Services.Interfaces.IAttributeService" mapTo="crds_angular.Services.AttributeService" />
    <register type="crds_angular.Services.Interfaces.IAddressService" mapTo="crds_angular.Services.AddressService" />
    <register type="crds_angular.Services.Interfaces.IBulkEmailSyncService" mapTo="crds_angular.Services.BulkEmailSyncService" />
    <register type="crds_angular.Services.Interfaces.IObjectAttributeService" mapTo="crds_angular.Services.ObjectAttributeService" />
    <register type="crds_angular.Services.Interfaces.ITripService" mapTo="crds_angular.Services.TripService" />  
    <register type="crds_angular.Services.Interfaces.IVolunteerApplicationService" mapTo="crds_angular.Services.VolunteerApplicationService" />    
    <register type="crds_angular.Services.Interfaces.IPersonService" mapTo="crds_angular.Services.PersonService" />
    <register type="crds_angular.Services.Interfaces.IServeService" mapTo="crds_angular.Services.ServeService" />
    <register type="crds_angular.Services.Interfaces.IGoSkillsService" mapTo="crds_angular.Services.GoSkillsService" />
    <register type="crds_angular.Services.Interfaces.IAccountService" mapTo="crds_angular.Services.AccountService" />
    <register type="crds_angular.Services.Interfaces.IDonorService" mapTo="crds_angular.Services.DonorService" />
    <register type="crds_angular.Services.Interfaces.IDonorStatementService" mapTo="crds_angular.Services.DonorStatementService" />
    <register type="crds_angular.Services.Interfaces.IEmailCommunication" mapTo="crds_angular.Services.EmailCommunication" />
    <register type="crds_angular.Services.Interfaces.ITextCommunicationService" mapTo="crds_angular.Services.TwilioService" />
    <register type="crds_angular.Services.Interfaces.IDonationService" mapTo="crds_angular.Services.DonationService" />
    <register type="crds_angular.Services.Interfaces.IProgramService" mapTo="crds_angular.Services.ProgramService" />
    <register type="crds_angular.Services.Interfaces.IOrganizationService" mapTo="crds_angular.Services.OrganizationService" />
    <register type="crds_angular.Services.Interfaces.ISubscriptionsService" mapTo="crds_angular.Services.SubscriptionsService" />
    <register type="crds_angular.Services.Interfaces.IUserImpersonationService" mapTo="crds_angular.Services.UserImpersonationService" />
    <register type="crds_angular.Services.Interfaces.IGatewayLookupService" mapTo="crds_angular.Services.GatewayLookupService" />
    <register type="crds_angular.Services.Interfaces.ICampRules" mapTo="crds_angular.Services.CampRules" />
    <register type="crds_angular.Services.Interfaces.ICheckScannerService" mapTo="crds_angular.Services.EzScanCheckScannerService">
      <lifetime type="PerResolveLifetimeManager"/>
      <constructor>
        <param name="checkScannerDao"/>
        <param name="donorService" />
        <param name="paymentService" />
        <param name="mpDonorService" />
      </constructor>
    </register>
    <register type="crds_angular.Services.Interfaces.IGroupToolService" mapTo="crds_angular.Services.GroupToolService">
      <constructor>
        <param name="groupToolRepository"/>
        <param name="groupRepository"/>
        <param name="groupService"/>
        <param name="participantRepository"/>
        <param name="communicationRepository"/>
        <param name="contentBlockService"/>
        <param name="configurationWrapper"/>
        <param name="invitationRepository"/>
        <param name="addressProximityService">
          <dependency name="geocodeProximityService" />
        </param>
        <param name="contactRepository"/>
        <param name="addressMatrixService">
          <dependency name="googleMapsProximityService" />
        </param>
        <param name="emailCommunicationService"/>
        <param name="attributeService"/>
        <param name="addressService"/>
      </constructor>
    </register>
     <register type="crds_angular.Services.Interfaces.IFinderService" mapTo="crds_angular.Services.FinderService">
      <constructor>
        <param name="addressGeocodingService"/>
        <param name="finderRepository"/>
        <param name="contactRepository"/>
        <param name="addressService"/>
        <param name="participantRepository"/>
        <param name="groupToolService"/>
        <param name="configurationWrapper" />
      </constructor>
    </register>
    <register type="crds_angular.Services.Interfaces.IInvitationService" mapTo="crds_angular.Services.InvitationService"/>
    <register type="crds_angular.Services.Interfaces.ICampService" mapTo="crds_angular.Services.CampService" />
    <register type="crds_angular.Services.Interfaces.IPaymentService" mapTo="crds_angular.Services.PaymentService" />
    <register type="crds_angular.Services.Interfaces.ILoginService" mapTo="crds_angular.Services.LoginService" />
    <register type="crds_angular.Services.Interfaces.IEventService" mapTo="crds_angular.Services.EventService" />
    <register type="crds_angular.Services.Interfaces.IEventParticipantService" mapTo="crds_angular.Services.EventParticipantService" />
    <register type="crds_angular.Services.Interfaces.IChildcareService" mapTo="crds_angular.Services.ChildcareService" />
    <register type="crds_angular.Services.Interfaces.ICongregationService" mapTo="crds_angular.Services.CongregationService" />
    <register type="crds_angular.Services.Interfaces.IRoomService" mapTo="crds_angular.Services.RoomService" />
    <register type="crds_angular.Services.Interfaces.IStaffContactService" mapTo="crds_angular.Services.StaffContactService" />
    <register type="crds_angular.Services.Interfaces.IEquipmentService" mapTo="crds_angular.Services.EquipmentService" />
    <register type="crds_angular.Services.Interfaces.ITaskService" mapTo="crds_angular.Services.TaskService" />
    <register type="crds_angular.Services.Interfaces.IGoVolunteerService" mapTo="crds_angular.Services.GoVolunteerService"/>
    <register type="crds_angular.Services.Interfaces.IGroupConnectorService" mapTo="crds_angular.Services.GroupConnectorService"/>
    <register type="crds_angular.Services.Interfaces.IAddressGeocodingService" mapTo="crds_angular.Services.GoogleMapsAddressGeocodingService"/>

    <register name="googleMapsProximityService" type="crds_angular.Services.Interfaces.IAddressProximityService" mapTo="crds_angular.Services.GoogleMapsDistanceMatrixAddressProximityService">
      <lifetime type="PerResolveLifetimeManager"/>
      <constructor>
        <param name="mapsApiClient"/>
        <param name="addressGeocodingService"/>
      </constructor>
    </register>
    <register name="geocodeProximityService" type="crds_angular.Services.Interfaces.IAddressProximityService" mapTo="crds_angular.Services.GeocodeCalculationAddressProximityService">
      <lifetime type="PerResolveLifetimeManager"/>
      <constructor>
        <param name="addressGeocodingService"/>
      </constructor>
    </register>

	<!-- Data Access -->
	<register type="crds_angular.DataAccess.Interfaces.ICheckScannerDao" mapTo="crds_angular.DataAccess.EzScanCheckScannerDao">
		<lifetime type="PerResolveLifetimeManager"/>
		<constructor>
			<param name="dbConnection" dependencyName="ezScanDbConnection" />
		</constructor>
	</register>
	<register name="ezScanDbConnection" type="System.Data.IDbConnection" mapTo="System.Data.SqlClient.SqlConnection">
		<lifetime type="PerResolveLifetimeManager"/>
		<constructor></constructor>
		<property name="ConnectionString">
			<value value="EZSCAN_DB_CONN_STRING"
					typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
		</property>
	</register>

    <register type="crds_angular.Services.Interfaces.IPaymentProcessorService" mapTo="crds_angular.Services.StripePaymentProcessorService">
      <constructor>
        <param name="stripeRestClient">
          <dependency name="stripeRestClient" />
        </param>
        <param name="configuration">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="contentBlockService">
          <dependency type="Crossroads.Utilities.Interfaces.IContentBlockService"/>
        </param>
      </constructor>
    </register>
    
    <register type="crds_angular.Services.Interfaces.IGroupService" mapTo="crds_angular.Services.GroupService" />
    <register type="crds_angular.Services.Interfaces.IGroupSearchService" mapTo="crds_angular.Services.GroupSearchService" />
    <register type="crds_angular.Services.Interfaces.IStripeEventService" mapTo="crds_angular.Services.StripeEventService" />
    <register type="crds_angular.Services.Interfaces.IFormBuilderService" mapTo="crds_angular.Services.FormBuilderService" />

    <register name="stripeRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <constructor>
        <param name="baseUrl" type="string">
          <value value="PaymentClient" typeConverter="Crossroads.Web.Common.Configuration.AppSettingsTypeConverter" />
        </param>
      </constructor>
      <property name="Authenticator" dependencyName="stripeAuthenticator" />
    </register>
    <register name="stripeAuthenticator" type="RestSharp.Authenticators.IAuthenticator" mapTo="RestSharp.Authenticators.HttpBasicAuthenticator">
      <constructor>
        <param name="username">
          <value value="STRIPE_AUTH_TOKEN"
                 typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
        <!-- TODO I really need to set this to null, but Unity doesn't like that, so sending spaces for now -->
        <param name="password" value="  " />
      </constructor>
    </register>

    <register type="Crossroads.Utilities.Messaging.Interfaces.IMessageQueueFactory" mapTo="Crossroads.Utilities.Messaging.MessageQueueFactory"/>
    <register type="Crossroads.Utilities.Messaging.Interfaces.IMessageFactory" mapTo="Crossroads.Utilities.Messaging.MessageFactory"/>
    <register type="Crossroads.Utilities.Messaging.Interfaces.IMessageQueue" mapTo="Crossroads.Utilities.Messaging.MessageQueueImpl"/>
    
    <!-- Register Ministry Platform Translation Dependencies -->
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IGroupRepository" mapTo="MinistryPlatform.Translation.Repositories.GroupRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IGroupParticipantRepository" mapTo="MinistryPlatform.Translation.Repositories.GroupParticipantRepository">
      <constructor>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="ministryPlatformService">
          <dependency type="MinistryPlatform.Translation.Repositories.Interfaces.IMinistryPlatformService"/>
        </param>
        <param name="apiUserService">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
      <param name="groupRepository">
          <dependency type="MinistryPlatform.Translation.Repositories.GroupRepository"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IAddressRepository" mapTo="MinistryPlatform.Translation.Repositories.AddressRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IBulkEmailRepository" mapTo="MinistryPlatform.Translation.Repositories.BulkEmailRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IEventRepository" mapTo="MinistryPlatform.Translation.Repositories.EventRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IEventParticipantRepository" mapTo="MinistryPlatform.Translation.Repositories.EventParticipantRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IMinistryPlatformService" mapTo="MinistryPlatform.Translation.Repositories.MinistryPlatformServiceImpl" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IObjectAttributeRepository" mapTo="MinistryPlatform.Translation.Repositories.ObjectAttributeRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IContactRepository" mapTo="MinistryPlatform.Translation.Repositories.ContactRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IContactRelationshipRepository" mapTo="MinistryPlatform.Translation.Repositories.ContactRelationshipRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IOpportunityRepository" mapTo="MinistryPlatform.Translation.Repositories.OpportunityRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IContactRelationshipRepository" mapTo="MinistryPlatform.Translation.Repositories.ContactRelationshipRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IParticipantRepository" mapTo="MinistryPlatform.Translation.Repositories.ParticipantRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IProgramRepository" mapTo="MinistryPlatform.Translation.Repositories.ProgramRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IDonorRepository" mapTo="MinistryPlatform.Translation.Repositories.DonorRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IContactRelationshipRepository" mapTo="MinistryPlatform.Translation.Repositories.ContactRelationshipRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ICommunicationRepository" mapTo="MinistryPlatform.Translation.Repositories.CommunicationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ICampaignRepository" mapTo="MinistryPlatform.Translation.Repositories.CampaignRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ISkillsRepository" mapTo="MinistryPlatform.Translation.Repositories.SkillsRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.GoCincinnati.IProjectRepository" mapTo="MinistryPlatform.Translation.Repositories.GoCincinnati.ProjectRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.Rules.IRuleset" mapTo="MinistryPlatform.Translation.Repositories.Rules.RulesetRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.Rules.IProductRulesetsRepository" mapTo="MinistryPlatform.Translation.Repositories.Rules.ProductRulesetsRepository" />



    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IFormSubmissionRepository" mapTo="MinistryPlatform.Translation.Repositories.FormSubmissionRepository">
      <constructor>
        <param name="ministryPlatformService">
          <dependency type="MinistryPlatform.Translation.Repositories.Interfaces.IMinistryPlatformService"/>
        </param>
        <param name="dbConnection">
          <value value="MinistryPlatformDatabase"
                 typeConverter="MinistryPlatform.Translation.Utils.DbConnectionNameTypeConverter" />
        </param>
        <param name="authenticationService">
          <dependency type="Crossroads.Web.Common.Security.IAuthenticationRepository"/>
        </param>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IDonationRepository" mapTo="MinistryPlatform.Translation.Repositories.DonationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IPledgeRepository" mapTo="MinistryPlatform.Translation.Repositories.PledgeRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IPrivateInviteRepository" mapTo="MinistryPlatform.Translation.Repositories.PrivateInviteRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IDestinationRepository" mapTo="MinistryPlatform.Translation.Repositories.DestinationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IUserRepository" mapTo="MinistryPlatform.Translation.Repositories.UserRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ISelectionRepository" mapTo="MinistryPlatform.Translation.Repositories.SelectionRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IAttributeRepository" mapTo="MinistryPlatform.Translation.Repositories.AttributeRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IResponseRepository" mapTo="MinistryPlatform.Translation.Repositories.ResponseRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ICongregationRepository" mapTo="MinistryPlatform.Translation.Repositories.CongregationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IRoomRepository" mapTo="MinistryPlatform.Translation.Repositories.RoomRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IEquipmentRepository" mapTo="MinistryPlatform.Translation.Repositories.EquipmentRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ILookupRepository" mapTo="MinistryPlatform.Translation.Repositories.LookupRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ITaskRepository" mapTo="MinistryPlatform.Translation.Repositories.TaskRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IFormBuilderRepository" mapTo="MinistryPlatform.Translation.Repositories.FormBuilderRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IGroupToolRepository" mapTo="MinistryPlatform.Translation.Repositories.GroupToolRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IFinderRepository" mapTo="MinistryPlatform.Translation.Repositories.FinderRepository">
      <constructor>
        <param name="configuration">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="ministryPlatformService">
          <dependency type="MinistryPlatform.Translation.Repositories.Interfaces.IMinistryPlatformService"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
        <param name="authenticationService">
          <dependency type="Crossroads.Web.Common.Security.IAuthenticationRepository"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IInvitationRepository" mapTo="MinistryPlatform.Translation.Repositories.InvitationRepository" />

    <register type="MinistryPlatform.Translation.Repositories.Interfaces.GoCincinnati.IRegistrationRepository" mapTo="MinistryPlatform.Translation.Repositories.GoCincinnati.RegistrationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.GoCincinnati.IGroupConnectorRepository" mapTo="MinistryPlatform.Translation.Repositories.GoCincinnati.GroupConnectorRepository" />
    

    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IOrganizationRepository" mapTo="MinistryPlatform.Translation.Repositories.OrganizationRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IProjectTypeRepository" mapTo="MinistryPlatform.Translation.Repositories.ProjectTypeRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IChildcareRequestRepository" mapTo="MinistryPlatform.Translation.Repositories.ChildcareRequestRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IMedicalInformationRepository" mapTo="MinistryPlatform.Translation.Repositories.MedicalInformationRepository">
      <constructor>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IInvoiceRepository" mapTo="MinistryPlatform.Translation.Repositories.InvoiceRepository">
      <constructor>       
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
        <param name="productRepository">
          <dependency type="MinistryPlatform.Translation.Repositories.Interfaces.IProductRepository"/>
        </param>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
      </constructor>
    </register>
    
        <register type="MinistryPlatform.Translation.Repositories.Interfaces.IProductRepository" mapTo="MinistryPlatform.Translation.Repositories.ProductRepository">
      <constructor>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
      </constructor>
    </register>

    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IPaymentTypeRepository" mapTo="MinistryPlatform.Translation.Repositories.PaymentTypeRepository">
      <constructor>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
      </constructor>
    </register>

    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IPaymentRepository" mapTo="MinistryPlatform.Translation.Repositories.PaymentRepository">
      <constructor>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
      </constructor>
    </register>
    
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ICampRepository" mapTo="MinistryPlatform.Translation.Repositories.CampRepository" />
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.ITripRepository" mapTo="MinistryPlatform.Translation.Repositories.TripRepository">
      <constructor>        
        <param name="ministryPlatformRestRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Repositories.Interfaces.IChildcareRepository" mapTo="MinistryPlatform.Translation.Repositories.ChildcareRepository">
      <constructor>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="ministryPlatformRest">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository"/>
        </param>
        <param name="apiUserRepository">
          <dependency type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository"/>
        </param>
      </constructor>
    </register>
    <!-- Register Utility Dependencies -->
    <register type="Crossroads.Utilities.Interfaces.IContentBlockService"
              mapTo="Crossroads.Utilities.Services.ContentBlockService">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="cmsRestClient">
          <dependency name="cmsRestClient"/>
        </param>
      </constructor>
    </register>
    <register name="cmsRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <constructor>
        <param name="baseUrl" type="string">
          <value value="CRDS_CMS_ENDPOINT" typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>
    <register type="Crossroads.Utilities.Interfaces.ICryptoProvider"
              mapTo="Crossroads.Utilities.Services.TripleDesSymmetricKeyCryptoProvider">
      <constructor>
        <param name="base64EncodedKey">
          <value value="EZSCAN_DB_SECRET_KEY" typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
        <param name="cipherMode">
          <value value="ECB" typeConverter="Crossroads.Utilities.Services.EnumTypeConverter[System.Security.Cryptography.CipherMode]" />
        </param>
        <param name="paddingMode">
          <value value="PKCS7"  typeConverter="Crossroads.Utilities.Services.EnumTypeConverter[System.Security.Cryptography.PaddingMode]"/>
        </param>
      </constructor>
    </register>
    <register type="crds_angular.Util.Interfaces.IDateTime" mapTo="crds_angular.Util.DateTimeWrapper" />

    <!--<register type="crds_angular.Services.Interfaces.IPaymentProcessorService" mapTo="crds_angular.Services.StripePaymentProcessorService">
      <constructor>
        <param name="stripeRestClient">
          <dependency name="stripeRestClient" />
        </param>
        <param name="configuration">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="contentBlockService">
          <dependency type="Crossroads.Utilities.Interfaces.IContentBlockService"/>
        </param>
      </constructor>
    </register>-->
    
    <register name="mailchimpRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <constructor>
        <param name="baseUrl" type="string">
          <value value="BulkEmailApiUrl" typeConverter="Crossroads.Web.Common.Configuration.AppSettingsTypeConverter" />
        </param>
      </constructor>
      <property name="Authenticator" dependencyName="mailchimpAuthenticator" />
    </register>
    <register name="mailchimpAuthenticator" type="RestSharp.Authenticators.IAuthenticator" mapTo="RestSharp.Authenticators.HttpBasicAuthenticator">
      <constructor>
        <param name="username" value="testuser" />
        <param name="password">
          <value value="BULK_EMAIL_API_KEY"
                 typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>

    <register type="crds_angular.Util.Interfaces.IEmailListHandler" mapTo="crds_angular.Util.MailchimpListHandler" >
      <constructor>
        <param name="configWrapper">
          <dependency type="Crossroads.Web.Common.Configuration.IConfigurationWrapper"/>
        </param>
        <param name="bulkEmailRepository" />
        <param name="mailchimpRestClient">
          <dependency name="mailchimpRestClient" />
        </param>       
      </constructor>
    </register>

    <!-- Google Maps API -->
    <register type="GoogleMapsAPI.NET.API.Client.Interfaces.IMapsAPIClient" mapTo="GoogleMapsAPI.NET.API.Client.MapsAPIClient">
      <constructor>
        <param name="apiKey">
          <value value="GOOGLE_API_SECRET_KEY"
                 typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>
    
    <!-- Register a per-resolve MP PlatformServiceClient -->
    <register type="MinistryPlatform.Translation.PlatformService.PlatformServiceClient">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor></constructor>
    </register>
  </container>
</unity>
